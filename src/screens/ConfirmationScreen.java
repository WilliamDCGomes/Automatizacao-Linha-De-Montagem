package screens;

import java.awt.Frame;
import commands.Hash;
import connectionbd.ConnectionModule;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
/**
 *
 * @author willi
 */
public class ConfirmationScreen extends javax.swing.JFrame {
    Connection connection = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    public ConfirmationScreen() {
        initComponents();
        ConnectionModule connect = new ConnectionModule();
        connection = connect.getConnectionMySQL();
    }
    boolean hasPassword;
    int x = 0;
    public void checkIfHasPassword(){
        String sql ="select * from access_control_panel";
        try {
            pst=connection.prepareStatement(sql);
            rs= pst.executeQuery();
            if(rs.next()){
                hasPassword=true;
            }
            else{
                hasPassword=false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void localeStation(){
        String sqlnome = "select * from access_control_panel where passwors = MD5(MD5(MD5(?)))";
        try {
            Hash hash = new Hash();
            pst = connection.prepareStatement(sqlnome);
            pst.setString(1,hash.DoHash(inputPassword.getText()));
            rs = pst.executeQuery();
            if (rs.next()) {
                Frame[] frames = getFrames(); 
                CommandScreen commandScreen = new CommandScreen();
                for (int i = 0; i < frames.length; i++){ 
                    frames[i].dispose(); 
                }
                commandScreen.setVisible(true);
            }
            else{
                JOptionPane.showMessageDialog(null,"SENHA DE ACESSO INCORRETA");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInsertAccessPassword = new javax.swing.JLabel();
        inputPassword = new javax.swing.JPasswordField();
        buttonEnter = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        txtInsertAccessPassword.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txtInsertAccessPassword.setText("INSIRA A SENHA DE ACESSO");

        inputPassword.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        inputPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputPasswordKeyPressed(evt);
            }
        });

        buttonEnter.setText("ENTRAR");
        buttonEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnterActionPerformed(evt);
            }
        });
        buttonEnter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonEnterKeyPressed(evt);
            }
        });

        buttonCancel.setText("CANCELAR");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });
        buttonCancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonCancelKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonEnter)
                        .addGap(46, 46, 46)
                        .addComponent(buttonCancel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtInsertAccessPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(txtInsertAccessPassword)
                .addGap(28, 28, 28)
                .addComponent(inputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonEnter)
                    .addComponent(buttonCancel))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(391, 177));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnterActionPerformed
        if(inputPassword.getText().equals("")){
            JOptionPane.showMessageDialog(null, "DIGITE A SENHA DE ACESSO");
        }
        else if(hasPassword==false&&(inputPassword.getText().equals("admin")||inputPassword.getText().equals("ADMIN"))){
            Frame[] frames = getFrames(); 
            CommandScreen commandScreen = new CommandScreen();
            for (int i = 0; i < frames.length; i++){ 
                frames[i].dispose(); 
            }
            commandScreen.setVisible(true);
        }
        else if(hasPassword==true){
            localeStation();
        }
        else{
            JOptionPane.showMessageDialog(null, "SENHA DE ACESSO INCORRETA");
        }
    }//GEN-LAST:event_buttonEnterActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(x==0){
            x++;
            checkIfHasPassword();
        }
    }//GEN-LAST:event_formWindowActivated

    private void inputPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPasswordKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(inputPassword.getText().equals("")){
                JOptionPane.showMessageDialog(null, "DIGITE A SENHA DE ACESSO");
            }
            else if(hasPassword==false&&(inputPassword.getText().equals("admin")||inputPassword.getText().equals("ADMIN"))){
                Frame[] frames = getFrames(); 
                CommandScreen commandScreen = new CommandScreen();
                for (int i = 0; i < frames.length; i++){ 
                    frames[i].dispose(); 
                }
                commandScreen.setVisible(true);
            }
            else if(hasPassword==true){
                localeStation();
            }
            else{
                JOptionPane.showMessageDialog(null, "SENHA DE ACESSO INCORRETA");
            }
        }
    }//GEN-LAST:event_inputPasswordKeyPressed

    private void buttonEnterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonEnterKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(inputPassword.getText().equals("")){
                JOptionPane.showMessageDialog(null, "DIGITE A SENHA DE ACESSO");
            }
            else if(hasPassword==false&&(inputPassword.getText().equals("admin")||inputPassword.getText().equals("ADMIN"))){
                Frame[] frames = getFrames(); 
                CommandScreen commandScreen = new CommandScreen();
                for (int i = 0; i < frames.length; i++){ 
                    frames[i].dispose(); 
                }
                commandScreen.setVisible(true);
            }
            else if(hasPassword==true){
                localeStation();
            }
            else{
                JOptionPane.showMessageDialog(null, "SENHA DE ACESSO INCORRETA");
            }
        }
    }//GEN-LAST:event_buttonEnterKeyPressed

    private void buttonCancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonCancelKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            this.dispose();
        }
    }//GEN-LAST:event_buttonCancelKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmationScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonEnter;
    private javax.swing.JPasswordField inputPassword;
    private javax.swing.JLabel txtInsertAccessPassword;
    // End of variables declaration//GEN-END:variables
}
