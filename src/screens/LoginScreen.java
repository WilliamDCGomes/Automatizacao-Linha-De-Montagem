package screens;

import commands.Hash;
import connectionbd.ConnectionModule;
import functions.StartShotting;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author willi
 */
public class LoginScreen extends javax.swing.JFrame {
    Connection connection = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    int x =0;
    
    public LoginScreen() {
        initComponents();
        ConnectionModule connect = new ConnectionModule();
        connection = connect.getConnectionMySQL();
        URL adress = getClass().getResource("/images/icon.png");
        Image icon = Toolkit.getDefaultToolkit().getImage(adress);
        this.setIconImage(icon);
    }
    public void logar(String login, String password){
        String sql ="select id from stations where login = ? and passwors = MD5(MD5(MD5(?)))";
        try {
            pst=connection.prepareStatement(sql);
            pst.setString(1, login);
            pst.setString(2, password);
            rs= pst.executeQuery();
            if(rs.next()){
                int id = rs.getInt(1);
                WorkerScreen workerScreen = new WorkerScreen();
                workerScreen.login = inputLogin.getSelectedItem().toString();
                this.dispose();
                connection.close();
                workerScreen.setVisible(true);
                workerScreen.outputStation.setText(Integer.toString(id));
            }
            else{
                JOptionPane.showMessageDialog(null, "LOGIN OU SENHA INCORRETOS, REVISE OS CAMPOS DIGITADOS!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void getUsers(){
        String sql ="select login from stations";
        try {
            pst = connection.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                inputLogin.addItem(rs.getString(1));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDoLogin = new javax.swing.JLabel();
        txtLogin = new javax.swing.JLabel();
        txtPassword = new javax.swing.JLabel();
        inputPassword = new javax.swing.JPasswordField();
        buttonLogin = new javax.swing.JButton();
        buttonControlPanel = new javax.swing.JButton();
        inputLogin = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        txtDoLogin.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        txtDoLogin.setText("FAÇA LOGIN");

        txtLogin.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txtLogin.setText("LOGIN");

        txtPassword.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txtPassword.setText("SENHA");

        inputPassword.setFont(new java.awt.Font("Dialog", 0, 20)); // NOI18N
        inputPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputPasswordKeyPressed(evt);
            }
        });

        buttonLogin.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        buttonLogin.setText("LOGAR");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });
        buttonLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonLoginKeyPressed(evt);
            }
        });

        buttonControlPanel.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        buttonControlPanel.setText("PAÍNEL DE CONTROLE");
        buttonControlPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonControlPanelActionPerformed(evt);
            }
        });
        buttonControlPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonControlPanelKeyPressed(evt);
            }
        });

        inputLogin.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        inputLogin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar" }));
        inputLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputLoginKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLogin)
                            .addComponent(txtPassword))
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(inputLogin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonLogin)
                        .addGap(35, 35, 35)
                        .addComponent(buttonControlPanel)))
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtDoLogin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(txtDoLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLogin)
                    .addComponent(inputLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword)
                    .addComponent(inputPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLogin)
                    .addComponent(buttonControlPanel))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(577, 439));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonControlPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonControlPanelActionPerformed
        ConfirmationScreen confirmationScreen = new ConfirmationScreen();
        confirmationScreen.setVisible(true);
    }//GEN-LAST:event_buttonControlPanelActionPerformed

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed
        if(inputLogin.getSelectedItem().toString().equals("Selecionar")||inputPassword.getText().equals("")){
            JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS");
        }
        else{
            Hash hash = new Hash();
            logar(inputLogin.getSelectedItem().toString(), hash.DoHash(inputPassword.getText()));
        }
    }//GEN-LAST:event_buttonLoginActionPerformed

    private void inputPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPasswordKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(inputLogin.getSelectedItem().toString().equals("Selecionar")||inputPassword.getText().equals("")){
                JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS");
            }
            else{
                Hash hash = new Hash();
                logar(inputLogin.getSelectedItem().toString(), hash.DoHash(inputPassword.getText()));
            }
        }
    }//GEN-LAST:event_inputPasswordKeyPressed

    private void buttonLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonLoginKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(inputLogin.getSelectedItem().toString().equals("Selecionar")||inputPassword.getText().equals("")){
                JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS");
            }
            else{
                Hash hash = new Hash();
                logar(inputLogin.getSelectedItem().toString(), hash.DoHash(inputPassword.getText()));
            }
        }
    }//GEN-LAST:event_buttonLoginKeyPressed

    private void buttonControlPanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonControlPanelKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            ConfirmationScreen confirmationScreen = new ConfirmationScreen();
            confirmationScreen.setVisible(true);
        }
    }//GEN-LAST:event_buttonControlPanelKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(x==0){
            x++;
            getUsers();
        }
    }//GEN-LAST:event_formWindowActivated

    private void inputLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputLoginKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            inputPassword.requestFocus();
        }
    }//GEN-LAST:event_inputLoginKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonControlPanel;
    private javax.swing.JButton buttonLogin;
    private javax.swing.JComboBox<String> inputLogin;
    private javax.swing.JPasswordField inputPassword;
    private javax.swing.JLabel txtDoLogin;
    private javax.swing.JLabel txtLogin;
    private javax.swing.JLabel txtPassword;
    // End of variables declaration//GEN-END:variables
}
