package screens;

import commands.Hash;
import connectionbd.ConnectionModule;
import functions.UpperLetter;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author willi
 */
public class CadastreNewStation extends javax.swing.JFrame {
    Connection connection = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    PreparedStatement pst2 = null;
    ResultSet rs2 = null;
    
    public CadastreNewStation() {
        initComponents();
        ConnectionModule connect = new ConnectionModule();
        connection = connect.getConnectionMySQL();
        URL adress = getClass().getResource("/images/icon.png");
        Image icon = Toolkit.getDefaultToolkit().getImage(adress);
        this.setIconImage(icon);
        inputLogin.setDocument(new UpperLetter());
    }
    int x =0;
    private void add(){
        String sql = "insert into stations(id,login,passwors)values(?,?,MD5(MD5(MD5(?))))";
        try {
            Hash hash = new Hash();
            pst = connection.prepareStatement(sql);
            pst.setInt(1,Integer.parseInt(outputNumberOfStation.getText()));
            pst.setString(2,inputLogin.getText());
            pst.setString(3,hash.DoHash(inputPassword.getText()));
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"ESTAÇÃO CADASTRADA COM SUCESSO");
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private boolean hasStation(){
        String sqlnome = "select * from stations where id = ? or login = ?";
        try {
            pst2 = connection.prepareStatement(sqlnome);
            pst2.setString(1,outputNumberOfStation.getText());
            pst2.setString(2,inputLogin.getText());
            rs2 = pst2.executeQuery();
            if (rs2.next()) {
                return true;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
        return false;
    }
    private void localeID(){
        String sqlnome = "select max(id) from stations";
        try {
            pst = connection.prepareStatement(sqlnome);
            rs = pst.executeQuery();
            if (rs.next()) {
                if(!rs.getString(1).equals(null)){
                    outputNumberOfStation.setText(Integer.toString(Integer.parseInt(rs.getString(1))+1));
                }
            }
        } catch (Exception e) {
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNewStation = new javax.swing.JLabel();
        txtNumberOfStation = new javax.swing.JLabel();
        txtLogin = new javax.swing.JLabel();
        txtPassword = new javax.swing.JLabel();
        inputLogin = new javax.swing.JTextField();
        txtConfirmPassword = new javax.swing.JLabel();
        inputPassword = new javax.swing.JPasswordField();
        inputConfirmPassword = new javax.swing.JPasswordField();
        buttonSave = new javax.swing.JButton();
        outputNumberOfStation = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nova Estação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        txtNewStation.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        txtNewStation.setText("NOVA ESTAÇÃO");
        getContentPane().add(txtNewStation);
        txtNewStation.setBounds(100, 42, 185, 32);

        txtNumberOfStation.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        txtNumberOfStation.setText("NÚMERO DA ESTAÇÃO");
        getContentPane().add(txtNumberOfStation);
        txtNumberOfStation.setBounds(24, 112, 162, 20);

        txtLogin.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        txtLogin.setText("LOGIN");
        getContentPane().add(txtLogin);
        txtLogin.setBounds(24, 166, 44, 20);

        txtPassword.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        txtPassword.setText("SENHA");
        getContentPane().add(txtPassword);
        txtPassword.setBounds(24, 215, 49, 20);

        inputLogin.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        inputLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputLoginKeyPressed(evt);
            }
        });
        getContentPane().add(inputLogin);
        inputLogin.setBounds(231, 164, 129, 24);

        txtConfirmPassword.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        txtConfirmPassword.setText("CONFIRMAR SENHA");
        getContentPane().add(txtConfirmPassword);
        txtConfirmPassword.setBounds(24, 263, 140, 20);

        inputPassword.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        inputPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputPasswordKeyPressed(evt);
            }
        });
        getContentPane().add(inputPassword);
        inputPassword.setBounds(231, 213, 129, 24);

        inputConfirmPassword.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        inputConfirmPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputConfirmPasswordKeyPressed(evt);
            }
        });
        getContentPane().add(inputConfirmPassword);
        inputConfirmPassword.setBounds(231, 261, 129, 24);

        buttonSave.setText("SALVAR");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        buttonSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buttonSaveKeyPressed(evt);
            }
        });
        getContentPane().add(buttonSave);
        buttonSave.setBounds(24, 306, 78, 25);

        outputNumberOfStation.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        outputNumberOfStation.setText("1");
        outputNumberOfStation.setEnabled(false);
        getContentPane().add(outputNumberOfStation);
        outputNumberOfStation.setBounds(231, 110, 129, 24);

        setSize(new java.awt.Dimension(401, 383));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if(x==0){
            x++;
            inputLogin.requestFocus();
            localeID();
        }
        
    }//GEN-LAST:event_formWindowActivated

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        if(inputLogin.getText().equals("")||inputPassword.getText().equals("")||inputConfirmPassword.getText().equals("")){
            JOptionPane.showMessageDialog(null, "POR FAVOR, PREENCHA TODOS OS CAMPOS");
        }
        else if(inputPassword.getText().equals(inputConfirmPassword.getText())){
            if(hasStation()){
                JOptionPane.showMessageDialog(null, "ESSA ESTAÇÃO JÁ ESTÁ CADASTRADA NO BANCO DE DADOS");
            }
            else{
                add();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "AS SENHAS NÃO CONFEREM");
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void inputLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputLoginKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            inputPassword.requestFocus();
        }
    }//GEN-LAST:event_inputLoginKeyPressed

    private void inputPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPasswordKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            inputConfirmPassword.requestFocus();
        }
    }//GEN-LAST:event_inputPasswordKeyPressed

    private void inputConfirmPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputConfirmPasswordKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(inputLogin.getText().equals("")||inputPassword.getText().equals("")||inputConfirmPassword.getText().equals("")){
                JOptionPane.showMessageDialog(null, "POR FAVOR, PREENCHA TODOS OS CAMPOS");
            }
            else if(inputPassword.getText().equals(inputConfirmPassword.getText())){
                if(hasStation()){
                    JOptionPane.showMessageDialog(null, "ESSA ESTAÇÃO JÁ ESTÁ CADASTRADA NO BANCO DE DADOS");
                }
                else{
                    add();
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "AS SENHAS NÃO CONFEREM");
            }
        }
    }//GEN-LAST:event_inputConfirmPasswordKeyPressed

    private void buttonSaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buttonSaveKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            if(inputLogin.getText().equals("")||inputPassword.getText().equals("")||inputConfirmPassword.getText().equals("")){
                JOptionPane.showMessageDialog(null, "POR FAVOR, PREENCHA TODOS OS CAMPOS");
            }
            else if(inputPassword.getText().equals(inputConfirmPassword.getText())){
                if(hasStation()){
                    JOptionPane.showMessageDialog(null, "ESSA ESTAÇÃO JÁ ESTÁ CADASTRADA NO BANCO DE DADOS");
                }
                else{
                    add();
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "AS SENHAS NÃO CONFEREM");
            }
        }
    }//GEN-LAST:event_buttonSaveKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastreNewStation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastreNewStation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastreNewStation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastreNewStation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastreNewStation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSave;
    private javax.swing.JPasswordField inputConfirmPassword;
    private javax.swing.JTextField inputLogin;
    private javax.swing.JPasswordField inputPassword;
    private javax.swing.JTextField outputNumberOfStation;
    private javax.swing.JLabel txtConfirmPassword;
    private javax.swing.JLabel txtLogin;
    private javax.swing.JLabel txtNewStation;
    private javax.swing.JLabel txtNumberOfStation;
    private javax.swing.JLabel txtPassword;
    // End of variables declaration//GEN-END:variables
}
